# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:latest
    restart: always

  go-service:
    build:
      context: ../StreamPlatformLite-Backend
      dockerfile: ../StreamPlatformLite-Backend/Dockerfile
    restart: always
    ports:
      - 8080:8080
      - 1935:1935
    depends_on:
      - mongo
      - redis
    environment:
      SERVER_PORT: 8080
      MONGODB_URI: mongodb://root:example@mongo:27017
      MONGODB_DATABASE: go_service
      APP_SECRET_KEY: YOUR_SECRET_KEY
      DISCORD_CLIENT_ID: YOUR_CLIENT_ID
      DISCORD_CLIENT_SECRET: YOUR_CLIENT_SECRET
      DISCORD_ADMIN_ID: YOUR_ADMIN_ID
      DISCORD_GUILD_ID: YOUR_GUILD_ID
      DOMAIN: example.com/api
      FRONTEND_DOMAIN: example.com
      FRONTEND_PORT: 3000
      REDIS_URI: redis:6379
      HTTPS: "true"
  frontend:
    build:
      context: ../StreamPlatformLite-Frontend
      dockerfile: ../StreamPlatformLite-Frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=https://example.com/api
      - DISCORD_URL=YOUR_DISCORD_URL
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - go-service
      - frontend

volumes:
  mongo-data:
  # Add a volume for Nginx certificates
  certs:
